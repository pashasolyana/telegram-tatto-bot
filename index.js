const { Scenes, session, Telegraf, Markup } = require('telegraf');
const Calendar = require('telegraf-calendar-telegram')
const token = "5298892699:AAEbpWZZ5hy3BdB25wkJsDSoH_yqwyPNY5o"
const bot = new Telegraf(token);
const { sequelize, User, Master, Date, Time,tatooPics, Order} = require('./models')

const calendar = new Calendar(bot, {
    startWeekDay: 1,
    weekDayNames: ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'],
    monthNames: [
        '–Ø–Ω–≤–∞—Ä—å',
        '–§–µ–≤—Ä–∞–ª—å',
        '–ú–∞—Ä—Ç',
        '–ê–ø—Ä–µ–ª—å',
        '–ú–∞–π',
        '–ò—é–Ω—å',
        '–ò—é–ª—å',
        '–ê–≤–≥—É—Å—Ç',
        '–°–µ–Ω—Ç—è–±—Ä—å',
        '–û–∫—Ç—è–±—Ä—å',
        '–ù–æ—è–±—Ä—å',
        '–î–µ–∫–∞–±—Ä—å'
    ]
})


const SceneGenerator = require('./Scenes')
const currScene = new SceneGenerator(calendar);
const ageScene = currScene.GenEntryScene()
const nameScene = currScene.GenNameScene()
const masterScene = currScene.genMasterScene()
const tatooSizeScene = currScene.genTatooSizeScene()
const designScene = currScene.genDesignScene()
const dateScene = currScene.getDateScene()
const phoneScene = currScene.genPhoneScene()
const orderScene = currScene.genOrderScene()

const stage = new Scenes.Stage([ageScene, nameScene, masterScene, tatooSizeScene, designScene, dateScene,phoneScene,orderScene])
bot.use(session())
bot.use(stage.middleware())


sequelize.sync()
bot.start(async (ctx) => {
    try {
        return await ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ–∞–Ω—Å —Ç–∞—Ç—É!üòä –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /info, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏. –î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ–∞–Ω—Å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /booked', Markup.keyboard([
            ["/info"], ["/booked"]
        ]).oneTime().resize())
    } catch (error) {
        console.log(error)
    }
})
bot.command('booked', async (ctx) => {
    ctx.scene.enter('entry')
})

bot.command('/info', async (ctx) => {
    ctx.reply('–¢—É—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–ª–æ–Ω–µ.')
})

bot.launch()

